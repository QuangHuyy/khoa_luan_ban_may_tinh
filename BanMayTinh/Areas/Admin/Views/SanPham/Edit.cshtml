@model BanMayTinh.Models.DB.SanPham

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <style>
        .hide-item {
            display: none;
        }

        .label-item {
            width: 80%;
            display: inline-flex;
        }

        .ic-add {
            margin-left: 10px;
            cursor: pointer;
            background: url("../../../../Content/icons.svg");
            width: 34px;
            height: 34px;
            min-width: 34px;
            background-position: -32px -304px;
        }

        .ic-sub {
            margin-left: 10px;
            cursor: pointer;
            background: url("../../../../Content/icons.svg");
            width: 34px;
            height: 34px;
            min-width: 34px;
            background-position: -125px -398px;
        }

        .item-input {
            width: calc(100% - 100px);
        }

        .item-props {
            display: flex;
        }

        .btn {
            display: flex;
            padding: 0%;
            height: 50px;
            margin-top: 2%;
            margin-bottom: 2%
        }

            .btn .btn_huy {
                background: #a4a4a4;
                color: #fff;
                padding: 0px 20px;
                border: 2px solid #000000;
                font-size: 16px;
                margin-left: 67.5%;
                margin-right: 0%;
                border-radius: 4px;
            }

                .btn .btn_huy:hover {
                    background-color: #dd513d;
                }

                .btn .btn_huy a {
                    background: no-repeat;
                    border: none;
                    color: #fff;
                    padding: 12px;
                    font-size: 15px;
                    text-align: center;
                    border-radius: 3px;
                    text-decoration: none;
                }

            .btn .btn_luu {
                display: flex;
                background: #2ca01c;
                color: #fff;
                padding: 10px 20px;
                border: 2px solid #000000;
                font-size: 15px;
                margin-left: 2%;
                border-radius: 4px;
            }

                .btn .btn_luu:hover {
                    background-color: #a4a4a4;
                }

                .btn .btn_luu button {
                    background: no-repeat;
                    border: none
                }


        .anh {
            display: flex;
        }

            .anh .anh_div {
                border: 1px solid #a4a4a4;
                margin: 10px;
                border-radius: 4px;
            }

                .anh .anh_div:hover {
                    border: 4px solid #47f9f7;
                    margin: 7px;
                }

                .anh .anh_div .img {
                    width: 150px;
                    height: 150px;
                }

                    .anh.anh_div .img:focus {
                        width: 200px;
                        height: 200px;
                    }
    </style>

    <script>
        var isShowItem1 = true;
        var propsName1 = "Thuộc tính x";

        function alertTest() {
            alert(isShowItem1);
        }

        function showItemNext(idCurr) {
            let idNext = idCurr + 1;
            let itemNext = document.getElementById('props' + idNext);
            let icSubCurrent = document.querySelector('.ic-add-' + idCurr);

            if (itemNext) {
                itemNext.classList.remove("hide-item");
            }

            //if (icSubCurrent) {
            //    icSubCurrent.classList.add('hide-item');
            //}
        }

        function hideItemProps(idCurr) {
            let itemNext = document.getElementById('props' + idCurr);
            if (itemNext) {
                itemNext.classList.add('hide-item');
            }
        }
    </script>

    @Html.HiddenFor(model => model.AnhSanPham)

    <div>
        <div>
            <strong class="text-uppercase text-danger" style="font-size: x-large">@Model.TenSanPham</strong>
        </div>
        <div class="btn">
            <div class="btn_huy">
                <a href="@Url.Action("Index", "SanPham")">Hủy</a>
            </div>
            <div class="btn_luu">
                <button class="button" type="submit">Lưu thay đổi</button>
            </div>
        </div>
    </div>

    <div class="anh">
        @foreach (var item in Model.AnhSanPhams)
        {
            <div class="anh_div">
                <img class="img" alt="@item.UR_Anh" src="/Content/images/AnhSanPham/@item.UR_Anh" />
            </div>

            @*<img class="etalage_source_image" style="width:50px;height:50px;" src="/Content/images/AnhSanPham/@item.UR_Anh" />*@
        }
    </div>

    <div class="cart" style="margin-bottom: 10%">



        <div class="cart-body" style="padding-top: 30px; padding-right: 20px">

            @*<div class="form-group">
                    <label class="label-item">
                        Thêm Ảnh
                    </label>
                    <form method="post" enctype="multipart/form-data"></form>
                    <div class="form-group">
                        <input type="file" id="UL_anh" name="UL_anh" accept="image/*" />
                    </div>
                </div>*@


            <div class="form-group">
                <label class="label-item">
                    Tên Sản Phẩm
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.EditorFor(model => model.TenSanPham, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TenSanPham, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="label-item">
                    Hãng Sản Xuất
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.DropDownList("Id_HangSanXuat", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Id_HangSanXuat, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="label-item">
                    Loại Sản Phẩm
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.DropDownList("Id_LoaiSanPham", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Id_LoaiSanPham, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="label-item">
                    Thuộc Tính 1
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.EditorFor(model => model.ThuocTinh1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ThuocTinh1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="label-item">
                    Thuộc Tính 2
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.EditorFor(model => model.ThuocTinh2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ThuocTinh2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="label-item">
                    Thuộc Tính 3
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.EditorFor(model => model.ThuocTinh3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ThuocTinh3, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="label-item">
                    Thuộc Tính 4
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.EditorFor(model => model.ThuocTinh4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ThuocTinh4, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="label-item">
                    Thuộc Tính 5
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.EditorFor(model => model.ThuocTinh5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ThuocTinh5, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="label-item">
                    Đơn Giá
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.EditorFor(model => model.DonGia, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DonGia, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="label-item">
                    Kho Hàng
                </label>
                <div class="item-props">
                    <div class="item-input">
                        @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>


}

